const SPACE_INDENTATION = 2,
      MAXIMUM_LINE_LENGTH = 4,
      MAXIMUM_NESTED_CALLBACKS = 5,
      MAXIMUM_PARAMETERS = 5;

module.exports = {
  extends: 'eslint:recommended',
  env: {
    browser: true,
    node: true,
    es6: true,
  },
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 2019,
  },
  plugins: [
    '@typescript-eslint',
  ],
  rules: {
    'init-declarations': [ 'error', 'always' ],
    'no-shadow': [ 'error', {
      builtinGlobals: true,
      allow: [ 'resolve', 'reject', 'done', 'cb', 'callback', 'next' ],
    } ],
    'no-label-var': 'error',
    'no-shadow-restricted-names': 'error',
    'no-undef-init': 'error',
    'no-undef': 'error',
    'no-use-before-define': [ 'error', { functions: false } ],
    'array-bracket-spacing': [ 'error', 'always' ],
    'block-spacing': 'error',
    'brace-style': [ 'error', '1tbs', { allowSingleLine: false } ],
    camelcase: [ 'error', { properties: 'always' } ],
    'comma-spacing': 'error',
    'comma-style': 'error',
    'computed-property-spacing': 'error',
    'consistent-this': [ 'error', 'self' ],
    'eol-last': 'error',
    'func-style': [ 'error', 'declaration', { allowArrowFunctions: true } ],
    'id-length': [ 'error', { min: 3 } ],
    indent: [ 'error', SPACE_INDENTATION, {
      VariableDeclarator: 'first',
      SwitchCase: 1,
    } ],
    'key-spacing': 'error',
    'keyword-spacing': 'error',
    'linebreak-style': [ 'error', 'unix' ],
    'lines-around-comment': 'error',
    'max-depth': [ 'error', MAXIMUM_LINE_LENGTH ],
    'max-len': [ 'error', {
      code: 120,
      comments: 90,
      ignoreUrls: true,
      ignoreRegExpLiterals: true,
    } ],
    'max-nested-callbacks': [ 'error', MAXIMUM_NESTED_CALLBACKS ],
    'max-params': [ 'error', MAXIMUM_PARAMETERS ],
    'new-cap': 'error',
    'new-parens': 'error',
    'padding-line-between-statements': [ 'error', {
      blankLine: 'always',
      prev: [ 'var', 'let', 'const' ],
      next: '*',
    } ],
    'no-array-constructor': 'error',
    'no-bitwise': 'error',
    'no-inline-comments': 'error',
    'no-lonely-if': 'error',
    'no-multiple-empty-lines': [ 'error', { max: 2, maxBOF: 1 } ],
    'no-negated-condition': 'error',
    'no-nested-ternary': 'error',
    'no-plusplus': [ 'error', { allowForLoopAfterthoughts: true } ],
    'func-call-spacing': 'error',
    'no-trailing-spaces': 'error',
    'no-underscore-dangle': 'error',
    'no-unneeded-ternary': 'error',
    'object-curly-spacing': [ 'error', 'always' ],
    'one-var': [ 'error', 'always' ],
    'one-var-declaration-per-line': [ 'error', 'always' ],
    'operator-assignment': [ 'error', 'always' ],
    'operator-linebreak': [ 'error', 'before' ],
    'padded-blocks': [ 'error', {
      blocks: 'never',
      classes: 'always',
      switches: 'always',
    } ],
    'lines-between-class-members': [ 'error', 'always' ],
    'quote-props': [ 'error', 'as-needed' ],
    quotes: [ 'error', 'single' ],
    'jsx-quotes': [ 'error', 'prefer-double' ],
    semi: 'error',
    'semi-spacing': 'error',
    'space-before-blocks': 'error',
    'space-before-function-paren': [ 'error', {
      anonymous: 'never',
      named: 'never',
      asyncArrow: 'always',
    } ],
    'space-in-parens': [ 'error', 'never' ],
    'space-infix-ops': 'error',
    'space-unary-ops': 'error',
    'spaced-comment': [ 'error', 'always' ],
    'wrap-regex': 'error',
    'comma-dangle': [ 'error', {
      arrays: 'always-multiline',
      objects: 'always-multiline',
      imports: 'always-multiline',
      exports: 'always-multiline',
      functions: 'never',
    } ],
    'no-console': [ 'error', { allow: [ 'info' ] } ],
    'no-empty-function': 'error',
    'no-empty-pattern': 'error',
    'no-extra-parens': 'error',
    'no-func-assign': 'error',
    'no-unreachable-loop': 'error',
    'arrow-body-style': [ 'error', 'as-needed' ],
    'arrow-parens': 'error',
    'arrow-spacing': 'error',
    'generator-star-spacing': [ 'error', { before: true, after: false } ],
    'no-var': 'error',
    'object-shorthand': [ 'error', 'always', { avoidExplicitReturnArrows: true } ],
    'prefer-arrow-callback': 'error',
    'prefer-const': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    'accessor-pairs': [ 'error', { getWithoutSet: true } ],
    'grouped-accessor-pairs': [ 'error', 'getBeforeSet' ],
    'block-scoped-var': 'error',
    complexity: [ 'error', { max: 8 } ],
    'consistent-return': 'error',
    curly: [ 'error', 'multi' ],
    'default-case': 'error',
    'default-case-last': 'error',
    'dot-location': [ 'error', 'property' ],
    'dot-notation': [ 'error', { allowPattern: '^[a-z]+(_[a-z]+)+$' } ],
    eqeqeq: 'error',
    'guard-for-in': 'error',
    'no-alert': 'error',
    'no-caller': 'error',
    'no-div-regex': 'error',
    'no-else-return': 'error',
    'no-eq-null': 'error',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-floating-decimal': 'error',
    'no-implicit-coercion': [ 'error', { allow: [ '!!', '~', '+' ] } ],
    'no-implied-eval': 'error',
    'no-invalid-this': 'error',
    'no-iterator': 'error',
    'no-labels': 'error',
    'no-lone-blocks': 'error',
    'no-loop-func': 'error',
    'no-magic-numbers': 'error',
    'no-multi-spaces': 'error',
    'no-multi-str': 'error',
    'no-new-func': 'error',
    'no-new-wrappers': 'error',
    'no-new': 'error',
    'no-new-object': 'error',
    'no-octal': 'error',
    'no-octal-escape': 'error',
    'no-param-reassign': 'error',
    'no-proto': 'error',
    'no-return-assign': 'error',
    'no-script-url': 'error',
    'no-self-compare': 'error',
    'no-sequences': 'error',
    'no-throw-literal': 'error',
    'no-unused-expressions': 'error',
    'no-useless-call': 'error',
    'no-useless-concat': 'error',
    'no-void': 'error',
    'no-warning-comments': 'error',
    radix: 'error',
    'vars-on-top': 'error',
    'wrap-iife': 'error',
    yoda: 'error',
    'array-callback-return': 'error',
    'default-param-last': 'error',
    'no-constructor-return': 'error',
    'no-extra-label': 'error',
    'no-implicit-globals': [ 'error', { lexicalBindings: false } ],
    'no-unmodified-loop-condition': 'error',
    'prefer-regex-literals': 'error',
    'no-whitespace-before-property': 'error',
    'template-curly-spacing': [ 'error', 'never' ],
    'object-property-newline': [ 'error', { allowAllPropertiesOnSameLine: true } ],
  },
  overrides: [
    {
      files: [ '*.ts' ],
      parser: '@typescript-eslint/parser',
      parserOptions: {
        sourceType: 'module',
        loggerFn: false,
      },
      rules: {},
    },
    {
      files: [ '*.d.ts' ],
      rules: {
        'no-unused-vars': 'off',
        '@typescript-eslint/no-namespace': 'off',
        '@typescript-eslint/no-empty-interface': 'off',
      },
    },
  ],
};
